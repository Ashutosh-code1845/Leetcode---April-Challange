class Solution {
public:
    int fsearch(vector<int>& nums, int target)
    {
        int l=0;
        int h=nums.size()-1;
        
        while(l<=h)
        {
            int m = l + (h-l)/2;
            
            if( nums[m]==target && (m==0 || nums[m-1]<target))
                return m;
            else if(nums[m]<target)
                l=m+1;
            else
                h=m-1;
        }
        return -1;
    }
    int ssearch(vector<int>& nums, int target)
    {
        int l=0;
        int h=nums.size()-1;
        
        while(l<=h)
        {
            int m = l + (h-l)/2;
            
            if(nums[m]==target && (m==nums.size()-1 || nums[m+1]>target))
                return m;
            else if(nums[m]>target)
                h=m-1;
            else
                l=m+1;
        }
        return -1;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        
        if(nums.size()==0) return {-1,-1};
        
        int first = fsearch(nums, target);
        int second = ssearch(nums, target);
        return {first,second};
    }
};
