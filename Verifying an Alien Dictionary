class Solution {
public:
    bool isAlienSorted(vector<string>& words, string order) {
        unordered_map<int,int> mp;
        for(int i=0;i<order.length();i++)
        {
            mp[order[i]-'a']=i;
        }
        for(int i=0;i<words.size()-1;i++)
        {
            for(int j=0;j<words[i].length();j++)
            {
                // If we do not find a mismatch letter between words[i] and words[i + 1],
                // we need to examine the case when words are like ("apple", "app").
                
                if (j >= words[i + 1].length()) return false;
                
//                 if words are same then check for next word
                if (words[i][j] != words[i + 1][j]) 
                {
                if(mp[words[i][j]-'a']>mp[words[i+1][j]-'a']) return false;
                else break;
                }
            }
        }
        return true;
    }
};
