class Solution {
public:
    vector<int> powerfulIntegers(int x, int y, int bound) {
          unordered_set<int> s;
    
    int counti = 0;
    while(pow(x,counti)<bound)  //find count of x powers less than bound
    {
        counti++;
        if(x == 1)
            break;
    }
    
    int countj = 0;
    while(pow(y,countj)<bound)  //find count of y powers less than bound
    {
        countj++;
        if(y == 1)
            break;
    }
    
    for(int i=0;i<counti;i++)
    {
        for(int j=0;j<countj;j++)
        {
            if(pow(x,i) + pow(y,j) > bound)
                break;
            s.insert(pow(x,i) + pow(y,j));  //store in set to avoid duplicates
        }
    }
    
    return vector<int>(s.begin(),s.end());
    }
};
