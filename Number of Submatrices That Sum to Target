class Solution {
public:
    int numSubmatrixSumTarget(vector<vector<int>>& matrix, int target) {
        int m=matrix.size();
        int n=matrix[0].size();
        
        for(int i=0;i<m;i++)
        {
            for(int j=1;j<n;j++)
            {
                matrix[i][j]+=matrix[i][j-1];
            }
        }
        int count=0;
        unordered_map<int,int> mp;
        
        for(int start=0; start<n ; start++)
        {
            for(int end=start; end<n; end++)
            {
                
//                 considering colums from start to end
                mp.clear();
                
                mp[0]++;
                
                int preSum=0;
                
                for(int i=0;i<m; i++)
                {
                    int curr= matrix[i][end];
                    
                    if(start>0)
                        curr-=matrix[i][start-1];
                    
                    preSum+=curr;
                    
                    count+=mp[preSum-target];
                    mp[preSum]++;
                }
            }
        }
        return count;
    }
};
