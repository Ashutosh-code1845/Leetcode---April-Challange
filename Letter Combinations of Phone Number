class Solution {
public:
unordered_map<int,string> mp= {
    {2,"abc"},
    {3,"def"},
    {4,"ghi"},
    {5,"jkl"},
    {6,"mno"},
    {7,"pqrs"},
    {8,"tuv"},
    {9,"wxyz"},
};
    void solve(string digits,string temp,vector<string> &ans, int start, int n)
    {
        if(temp.length()==n)
        {
            ans.push_back(temp);
        }
        string s=mp[digits[start]-'0'];
        for(int i=0;i<s.length();i++)
        {
            temp.push_back(s[i]);
            solve(digits,temp,ans,start+1,n);
            temp.pop_back();
        }
    }
    vector<string> letterCombinations(string digits) {
        vector<string> ans;
        if(digits.length()==0) return ans;
        string temp="";
        solve(digits,temp,ans,0,digits.length());
        return ans;
    }
};
